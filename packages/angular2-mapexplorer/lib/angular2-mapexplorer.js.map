{"version":3,"file":null,"sources":["../src/st-map-explorer/st-map-explorer.component.ts","../src/function-arguments.pipe.ts","../src/chain-tree-builder.service.ts","../src/map-validator.service.ts","../src/st-map-validator/st-map-validator.component.ts","../src/st-promise-loader/st-promise-loader.component.ts","../src/st-merkle-path-tree/st-merkle-path-tree.component.ts","../src/map-explorer.module.ts"],"sourcesContent":["import { Component, Input, OnInit, OnChanges, AfterViewInit, ViewChild } from '@angular/core';\nimport { ChainTreeBuilderService } from '../chain-tree-builder.service';\nimport { ChainTreeBuilder } from 'mapexplorer-core';\n\n@Component({\n  selector: 'st-map-explorer',\n  templateUrl: './st-map-explorer.component.html',\n  styleUrls: ['./st-map-explorer.component.css']\n})\nexport class StMapExplorerComponent implements OnInit, OnChanges, AfterViewInit {\n\n  @ViewChild('map') map;\n\n  private error: string;\n\n  private loading: boolean;\n\n  private builder: ChainTreeBuilder;\n\n  private defaultOptions: any;\n\n  private segment;\n\n  displayed: string;\n\n  tags: Array<String> = [];\n\n  onHide: () => void;\n\n  @Input() chainscript: string;\n\n  @Input() refresh: any;\n\n  @Input() name: string;\n\n  @Input() application: string;\n\n  @Input() mapId: string;\n\n  @Input() onSegmentShow;\n\n  @Input() onSegmentHide;  \n\n  constructor(public chainTreeBuilderService: ChainTreeBuilderService) {\n\n    let self = this;\n\n    this.defaultOptions = {\n      onclick(d, onHide) {\n        self.show(d.data, onHide);\n      },\n      onTag(tag) {\n        if (tag) {\n          self.tags = Array.from(new Set(self.tags.concat(tag)));\n        }\n      }\n    }; \n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    // const options = { ...defaultOptions, ...scope.options };\n    if (this.builder) {\n      this.error = null;\n      this.loading = true;\n      this.chainTreeBuilderService.build(this.builder, this, this.defaultOptions)\n        .then(() => (this.loading = false))\n        .catch(error => {\n          this.loading = false;\n          this.error = error.message;\n        });\n    }\n  }\n\n  ngAfterViewInit() {\n    this.builder = this.chainTreeBuilderService.getBuilder(this.map.nativeElement);\n  }\n\n  transactionUrl(segment){\n    return segment.meta.evidence.transactions['bitcoin:main'];\n  }  \n\n  show(segment, onHide) {\n    this.segment = segment;\n    this.onHide = onHide;\n    this.onSegmentShow(this.name);\n  }\n\n  close() {\n    this.segment = null;\n    this.onSegmentHide(this.name);\n    this.onHide();\n  }\n\n  display(tab) {\n    this.displayed = tab;\n\n    // this.editors.forEach(editor => {\n    //   editor.resize();\n    //   editor.renderer.updateFull();\n    // });\n  }\n\n  state() {\n    return JSON.stringify(this.segment.link.state, undefined, 2);\n  }\n\n  segmentJSON() {\n    return JSON.stringify(this.segment, undefined, 2);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'functionArguments'\n})\nexport class FunctionArgumentsPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return value.map(arg => {\n      if (arg instanceof Object) {\n        return JSON.stringify(arg, undefined, 2);\n      }\n      return arg;\n    }).join(', ');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ChainTreeBuilder } from 'mapexplorer-core';\n\n@Injectable()\nexport class ChainTreeBuilderService {\n\n  constructor() { }\n\n  getBuilder(element) {\n    return new ChainTreeBuilder(element);\n  }\n\n  build(builder, map, options) {\n    return builder.build({\n      id: map.mapId,\n      application: map.application,\n      chainscript: map.chainscript\n    }, options);\n  }\n}","import { Injectable } from '@angular/core';\nimport { ChainValidator } from 'mapexplorer-core';\n\n@Injectable()\nexport class MapValidatorService {\n\n  constructor() { }\n\n  validate(chainscript): Promise<string> {\n    return new ChainValidator(chainscript).validate();\n  }\n}","import { Component, OnInit, OnChanges, Input } from '@angular/core';\nimport { MapValidatorService } from '../map-validator.service';\n\n@Component({\n  selector: 'st-map-validator',\n  templateUrl: './st-map-validator.component.html',\n  styleUrls: ['./st-map-validator.component.css']\n})\nexport class StMapValidatorComponent implements OnInit, OnChanges {\n\n  @Input() chainscript: string;\n\n  errors: any = {};\n\n  error: string = null;\n\n  loading: boolean = false;\n\n  constructor(public mapValidatorService: MapValidatorService) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.error = null;\n    if (this.chainscript) {\n      this.loading = true;\n      this.mapValidatorService.validate(this.chainscript)\n        .then(errors => {\n          this.errors = errors;\n          this.loading = false;\n        }).catch(error => {\n          this.error = error.message;\n          this.loading = false;\n        });\n    }\n  }\n}\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\n@Component({\n  selector: 'st-promise-loader',\n  templateUrl: './st-promise-loader.component.html',\n  styleUrls: ['./st-promise-loader.component.css']\n})\nexport class StPromiseLoaderComponent implements OnInit, OnChanges {\n\n  @Input() title: string;\n\n  @Input() loading: boolean;\n\n  @Input() errors: Array<String>;\n\n  errorMessages = [];\n\n  loadingErrors = false;\n\n  success = false;\n\n  error = false;\n\n  errorsShowed = false;\n\n  toggleErrors = () => {\n    this.errorsShowed = !this.errorsShowed;\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {    \n    this.errorMessages = [];\n    this.success = false;\n    this.error = false;\n    if (this.errors) {\n      this.loadingErrors = true;\n      Promise.all(this.errors)\n        .then(errs => {\n          this.errorMessages = errs.filter(Boolean);\n          this.loadingErrors = false;\n          this.success = this.errorMessages.length === 0;\n          this.error = !this.success;\n        })\n        .catch(err => {\n          console.log(err);\n          this.loadingErrors = false;\n        });\n    }\n  }\n}\n","import { Component, OnInit, OnChanges, ViewChild, Input, ElementRef } from '@angular/core';\nimport { MerklePathTree } from 'mapexplorer-core'; \n\n@Component({\n  selector: 'st-merkle-path-tree',\n  template: '<div class=\"merkle-path\"></div>',\n  styleUrls: ['./st-merkle-path-tree.component.css']\n})\nexport class StMerklePathTreeComponent implements OnInit, OnChanges {\n\n  @Input() merklePath;\n\n  merklePathTree: MerklePathTree = null;\n\n  constructor(public element: ElementRef) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.merklePathTree = this.merklePathTree || new MerklePathTree(this.element.nativeElement);\n    this.merklePathTree.display(this.merklePath);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MdButtonModule } from '@angular2-material/button';\nimport { MdIconModule } from '@angular2-material/icon';\nimport { MdProgressCircleModule } from '@angular2-material/progress-circle';\nimport { MdToolbarModule } from '@angular2-material/toolbar';\n\nimport { StMapExplorerComponent } from './st-map-explorer/st-map-explorer.component';\nimport { FunctionArgumentsPipe } from './function-arguments.pipe';\nimport { ChainTreeBuilderService } from './chain-tree-builder.service';\nimport { MapValidatorService } from './map-validator.service';\nimport { StMapValidatorComponent } from './st-map-validator/st-map-validator.component';\nimport { StPromiseLoaderComponent } from './st-promise-loader/st-promise-loader.component';\nimport { StMerklePathTreeComponent } from './st-merkle-path-tree/st-merkle-path-tree.component';\n\n@NgModule({\n  declarations: [\n    StMapExplorerComponent,\n    FunctionArgumentsPipe,\n    StMapValidatorComponent,\n    StPromiseLoaderComponent,\n    StMerklePathTreeComponent\n  ],\n  imports: [\n    MdButtonModule,\n    MdIconModule,\n    MdProgressCircleModule,\n    MdToolbarModule\n  ],\n  providers: [\n    ChainTreeBuilderService,\n    MapValidatorService\n  ],\n  bootstrap: []\n})\nexport class MapExplorerModule { }\n"],"names":["ViewChild","Input","Component","Pipe","ChainTreeBuilder","Injectable","ChainValidator","MerklePathTree","NgModule","MdButtonModule","MdIconModule","MdProgressCircleModule","MdToolbarModule"],"mappings":"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"}